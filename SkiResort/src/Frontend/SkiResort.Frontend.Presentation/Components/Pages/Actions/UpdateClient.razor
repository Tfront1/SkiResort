@page "/client-update/{Id}"
@using System.Net.Http.Json
@inject IHttpApiClientFactory HttpApiClientFactory
@inject NavigationManager NavigationManager

<h3>Update Client</h3>

@if (client == null)
{
    <p><em>Loading client data...</em></p>
}
else
{
    <EditForm Model="client" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="firstName" class="form-label">First Name</label>
            <InputText id="firstName" class="form-control" @bind-Value="client.FirstName" />
        </div>
        <div class="mb-3">
            <label for="lastName" class="form-label">Last Name</label>
            <InputText id="lastName" class="form-control" @bind-Value="client.LastName" />
        </div>
        <div class="mb-3">
            <label for="phone" class="form-label">Phone</label>
            <InputText id="phone" class="form-control" @bind-Value="client.Phone" />
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <InputText id="email" class="form-control" @bind-Value="client.Email" />
        </div>

        <button type="submit" class="btn btn-success">Save Changes</button>
    </EditForm>
}

@code {
    private SkiResortApiClient? skiResortApiClient;

    [Parameter]
    public string Id { get; set; }

    private ClientDto client;

    protected override async Task OnInitializedAsync()
    {
        skiResortApiClient = await HttpApiClientFactory.GetSkiResortApiHttpClientAsync();

        client = await skiResortApiClient!.ClientGetByIdAsync(Int32.Parse(Id));
    }

    private async Task HandleSubmit()
    {
        await skiResortApiClient!.ClientPUTAsync(client);
        NavigationManager.NavigateTo("/clients", true);
    }
}
